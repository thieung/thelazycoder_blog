{"version":3,"file":"index.bundle.js","mappings":"yGAAA,QAEA,IAAMA,EAAY,KAGlBC,OAAOC,iBAAiB,oBAAoB,WACxC,IAAMC,EAAW,IAAIC,sBAAqB,SAACC,GACvCA,EAAQC,SAAQ,SAACC,GACb,IAAMC,EAAKD,EAAME,OAAOC,aAAa,MACjCH,EAAMI,kBAAoB,EAC1BC,SACKC,cAAc,0BAAmBL,EAAE,OACnCM,UAAUC,IAAI,UAEnBH,SACKC,cAAc,0BAAmBL,EAAE,OACnCM,UAAUE,OAAO,gBASlC,SAASC,EAAgBC,GACrB,GAAIN,SAASC,cAAc,qBAAsB,CAC7C,IAEMM,EAAU,CACZC,KAAM,YACNC,MAHgB,SAAhBH,EAAyB,cAAgB,gBAK9BN,SAASC,cACpB,qBAEGS,cAAcC,YAAYJ,EAAS,wBAflDP,SAASY,iBAAiB,kBAAkBlB,SAAQ,SAACmB,GACjDtB,EAASuB,QAAQD,MAkBrB,IAAME,EAAOf,SAASgB,eAAe,QAC/BC,EAAcjB,SAASgB,eACzB,gBAGJD,EAAKzB,iBAAiB,SAAS,WACPyB,EAAKG,cACL9B,GAChB2B,EAAKG,YA7CA,KA8CLlB,SAASmB,gBAAgBC,aAAa,aAAc,QACpDC,aAAaC,QAAQ,OA/ChB,MAiDLjB,EAAgB,QAEhBY,EAAYM,KAAO,yBAEnBR,EAAKG,YAAc9B,EACnBY,SAASmB,gBAAgBC,aAAa,aAAc,SACpDC,aAAaC,QAAQ,OAAQlC,GAE7BiB,EAAgB,SAEhBY,EAAYM,KAAO,4BAI3B,IAAMC,EAAaH,aAAaI,QAAQ,QACpCD,GACAT,EAAKG,YAAcM,EACfA,IAAepC,EACfY,SAASmB,gBAAgBC,aAAa,aAAc,UAEpDpB,SAASmB,gBAAgBC,aAAa,aAAc,QACpDf,EAAgB,SAEhBY,EAAYM,KAAO,0BAGvBR,EAAKG,YAAc9B,EACnBY,SAASmB,gBAAgBC,aAAa,aAAc,SACpDC,aAAaC,QAAQ,OAAQlC,IAGjC,IAAMsC,EAAU1B,SAASgB,eAAe,YAClCW,EAAe3B,SAASgB,eAC1B,kBAGA3B,OAAOuC,YACPvC,OAAOuC,WAAW,gCAAgCC,UAElDH,EAAQH,KAAO,wBACfI,EAAaJ,KAAO,wBAEpBvB,SAAS8B,qBAAqB,QAAQ,GAAGC,YAAYL,GACrD1B,SAAS8B,qBAAqB,QAAQ,GAAGC,YAAYJ,OAI7D3B,SAASV,iBACL,QACA,SAAC0C,GACGA,EAAIC,cAAcC,QACd,aACA,0CAGJF,EAAIG,oBAER,GAGJ,IAAMT,EAAU1B,SAASgB,eAAe,YAClCW,EAAe3B,SAASgB,eAC1B,kBAEJ3B,OACKuC,WAAW,gCACXtC,iBAAiB,UAAU,SAAC8C,GACrBA,EAAEP,SACFH,EAAQH,KAAO,wBACfI,EAAaJ,KAAO,0BAEpBG,EAAQH,KAAO,yBACfI,EAAaJ,KAAO,0BAGxBvB,SAAS8B,qBAAqB,QAAQ,GAAGC,YAAYL,GACrD1B,SAAS8B,qBAAqB,QAAQ,GAAGC,YAAYJ,Q","sources":["webpack:///./src/js/index.ts"],"sourcesContent":["import \"../css/style.css\";\n\nconst lightMode = \"☀️\";\nconst darkMode = \"🌙\";\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach((entry) => {\n            const id = entry.target.getAttribute(\"id\");\n            if (entry.intersectionRatio > 0) {\n                document\n                    .querySelector(`nav li a[href=\"#${id}\"]`)\n                    .classList.add(\"active\");\n            } else {\n                document\n                    .querySelector(`nav li a[href=\"#${id}\"]`)\n                    .classList.remove(\"active\");\n            }\n        });\n    });\n\n    document.querySelectorAll(\"h2[id], h3[id]\").forEach((section) => {\n        observer.observe(section);\n    });\n\n    function utterancesTheme(currentMode: string) {\n        if (document.querySelector(\".utterances-frame\")) {\n            const theme =\n                currentMode === \"dark\" ? \"github-dark\" : \"github-light\";\n            const message = {\n                type: \"set-theme\",\n                theme: theme,\n            };\n            const iframe = document.querySelector(\n                \".utterances-frame\"\n            ) as HTMLIFrameElement;\n            iframe.contentWindow.postMessage(message, \"https://utteranc.es\");\n        }\n    }\n\n    const mode = document.getElementById(\"mode\") as HTMLElement;\n    const chromaTheme = document.getElementById(\n        \"chroma-theme\"\n    ) as HTMLLinkElement;\n\n    mode.addEventListener(\"click\", function () {\n        const currentMode = mode.textContent;\n        if (currentMode === lightMode) {\n            mode.textContent = darkMode;\n            document.documentElement.setAttribute(\"data-theme\", \"dark\");\n            localStorage.setItem(\"mode\", darkMode);\n\n            utterancesTheme(\"dark\");\n\n            chromaTheme.href = \"/css/syntax-dark.css\";\n        } else {\n            mode.textContent = lightMode;\n            document.documentElement.setAttribute(\"data-theme\", \"light\");\n            localStorage.setItem(\"mode\", lightMode);\n\n            utterancesTheme(\"light\");\n\n            chromaTheme.href = \"/css/syntax-light.css\";\n        }\n    });\n\n    const latestMode = localStorage.getItem(\"mode\");\n    if (latestMode) {\n        mode.textContent = latestMode;\n        if (latestMode === lightMode) {\n            document.documentElement.setAttribute(\"data-theme\", \"light\");\n        } else {\n            document.documentElement.setAttribute(\"data-theme\", \"dark\");\n            utterancesTheme(\"light\");\n\n            chromaTheme.href = \"/css/syntax-dark.css\";\n        }\n    } else {\n        mode.textContent = lightMode;\n        document.documentElement.setAttribute(\"data-theme\", \"light\");\n        localStorage.setItem(\"mode\", lightMode);\n    }\n\n    const tabIcon = document.getElementById(\"tab-icon\") as HTMLLinkElement;\n    const tabAppleIcon = document.getElementById(\n        \"tab-apple-icon\"\n    ) as HTMLLinkElement;\n    if (\n        window.matchMedia &&\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ) {\n        tabIcon.href = \"/images/logo-dark.svg\";\n        tabAppleIcon.href = \"/images/logo-dark.svg\";\n\n        document.getElementsByTagName(\"head\")[0].appendChild(tabIcon);\n        document.getElementsByTagName(\"head\")[0].appendChild(tabAppleIcon);\n    }\n});\n\ndocument.addEventListener(\n    \"copy\",\n    (evt) => {\n        evt.clipboardData.setData(\n            \"text/plain\",\n            \"Copying is not allowed on this webpage\"\n        );\n\n        evt.preventDefault();\n    },\n    false\n);\n\nconst tabIcon = document.getElementById(\"tab-icon\") as HTMLLinkElement;\nconst tabAppleIcon = document.getElementById(\n    \"tab-apple-icon\"\n) as HTMLLinkElement;\nwindow\n    .matchMedia(\"(prefers-color-scheme: dark)\")\n    .addEventListener(\"change\", (e) => {\n        if (e.matches) {\n            tabIcon.href = \"/images/logo-dark.svg\";\n            tabAppleIcon.href = \"/images/logo-dark.svg\";\n        } else {\n            tabIcon.href = \"/images/logo-light.svg\";\n            tabAppleIcon.href = \"/images/logo-light.svg\";\n        }\n\n        document.getElementsByTagName(\"head\")[0].appendChild(tabIcon);\n        document.getElementsByTagName(\"head\")[0].appendChild(tabAppleIcon);\n    });\n\nfunction fetchLikes(slug) {\n    const data = {\n        slug: slug,\n    };\n    fetch(\"/.netlify/functions/fetch-likes\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n    })\n        .then(function (res) {\n            return res.json();\n        })\n        .then(function (data) {\n            //your code\n        });\n}\n\nfunction registerLikes(slug) {\n    const data = {\n        slug: slug,\n    };\n    fetch(\"/.netlify/functions/register-likes\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n    })\n        .then(function (res) {\n            return res.json();\n        })\n        .then(function (data) {\n            //your code\n        });\n}\n"],"names":["lightMode","window","addEventListener","observer","IntersectionObserver","entries","forEach","entry","id","target","getAttribute","intersectionRatio","document","querySelector","classList","add","remove","utterancesTheme","currentMode","message","type","theme","contentWindow","postMessage","querySelectorAll","section","observe","mode","getElementById","chromaTheme","textContent","documentElement","setAttribute","localStorage","setItem","href","latestMode","getItem","tabIcon","tabAppleIcon","matchMedia","matches","getElementsByTagName","appendChild","evt","clipboardData","setData","preventDefault","e"],"sourceRoot":""}