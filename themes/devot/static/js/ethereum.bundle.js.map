{"version":3,"file":"ethereum.bundle.js","mappings":"2EAWIA,E,23CAXJ,OAAMC,EAAkBC,SAASC,eAC7B,oBAGAC,EAAW,QAGmB,IADXC,OACFL,WACjBC,EAAgBK,UAAW,GAK/BL,EAAgBM,iBAAiB,SAAS,gD,kCAmB1C,W,mFACe,SAAMP,EAASQ,QAAQ,CAC9BC,OAAQ,yB,cADZL,EAAW,S,WAnBXM,GAEAV,EACKQ,QAAQ,CACLC,OAAQ,sBACRE,OAAQ,CACJ,CACIC,KAAMR,EAAS,GACfS,GAAI,6CACJC,MAAO,sBAIb,OAAC,e","sources":["webpack:///./src/js/ethereum.ts"],"sourcesContent":["const connectMetamask = document.getElementById(\n    \"connect-metamask\"\n) as HTMLButtonElement;\n\nlet accounts = [];\n\nconst anyWindow: any = window;\nif (typeof anyWindow.ethereum === \"undefined\") {\n    connectMetamask.disabled = true;\n}\n\nlet ethereum: any;\n\nconnectMetamask.addEventListener(\"click\", async () => {\n    getMetamaskAccount();\n\n    ethereum\n        .request({\n            method: \"eth_sendTransaction\",\n            params: [\n                {\n                    from: accounts[0],\n                    to: \"0x0374fAe44F049252A9FDc517514566a57b5D9Af9\",\n                    value: \"0x1c6bf52634000\",\n                },\n            ],\n        })\n        .catch(() => {\n            // TODO: Show error message\n        });\n});\n\nasync function getMetamaskAccount() {\n    accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n    });\n}\n"],"names":["ethereum","connectMetamask","document","getElementById","accounts","window","disabled","addEventListener","request","method","getMetamaskAccount","params","from","to","value"],"sourceRoot":""}